#!/usr/bin/env python
# ./dna_codes_3
# Decodes a DNA sequence using the process of compliment,
# transcription, and translation.
# The DNA is already split into triplets.
#
# By        : Leomar Dur√°n <https://github.com/lduran2/>
# When      : 2021-05-13t05:12
# For       : KINS 1223
# Version   : 1.4
#
# Changelog :
#     v1.4 - 2021-05-13t05:12
#         finished the translation
#
#     v1.3 - 2021-05-13t05:01
#         read from the translations csv file
#
#     v1.2 - 2021-05-13t04:49
#         transcribing to mRNA
#
#     v1.1 - 2021-05-13t04:44
#         complimenting the DNA
#
#     v1.0 - 2021-05-13t04:26
#         start with splitting DNA by triplets by whitespaces

import csv  # for DictReader
import re   # for findall

# complimentary bases in DNA
compliments = {
    'A': 'T',
    'G': 'C',
    'T': 'A',
    'C': 'G'
}

transcriptions = {
    'A': 'U',
    'G': 'C',
    'T': 'A',
    'C': 'G'
}

def main():
    # get the DNA sequence
    # split into list of characters including spaces
    dna = list(input('Enter the DNA.\n> '))

    # the complimentary bases, split into characters
    # non-base characters to ''
    dna_compliment = list(map(lambda c: compliments.get(c, ''), dna))

    # transcribe
    # non-base characters to ''
    m_rna = list(map(lambda c: transcriptions.get(c, ''), dna_compliment))

    # read the translations file into the translations dictionary
    translations = {}   # the translations dictionary
    with open('translations.csv') as csvfile:
        csvin = csv.DictReader(csvfile)
        for row in csvin:
            translations[row['codon']] = row['amino_acid']
        # end for row in csvin
    # end with open('translations.csv') as csvfile

    # split mRNA into triplets
    m_rna_3s = re.findall('.{3}', ''.join(m_rna))

    # translate each triplet
    message = list(map(lambda trip: translations.get(trip, '(ERROR)'), m_rna_3s))
    

    # print the results
    print('Complimentary DNA:', ''.join(dna_compliment))
    print('Transcription mRNA:', ''.join(m_rna))
    print('mRNA as triplets:', str(m_rna_3s))
    print('Message:', ' '.join(message))
# end def main()

main()
print('Done.')
